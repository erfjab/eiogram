name: Publish Dev Version

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '**.md'

jobs:
  publish-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Generate version
        id: version
        run: |
          # Get branch name (sanitize for version syntax)
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//.}  # Replace / with .
          BRANCH_NAME=${BRANCH_NAME//_/.}   # Replace _ with .
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-z0-9.]//g')  # Remove invalid chars
          
          # Generate version string compatible with PEP 440
          BASE_VERSION=$(grep -oP 'version = "\K[^"]+' pyproject.toml | head -1)
          TIMESTAMP=$(date -u +'%Y%m%d%H%M%S')
          
          if [ "$BRANCH_NAME" = "master" ]; then
            VERSION="${BASE_VERSION}.dev${TIMESTAMP}"
          else
            # Truncate branch name if too long
            SHORT_BRANCH=$(echo "$BRANCH_NAME" | cut -c1-20)
            VERSION="${BASE_VERSION}.dev.${SHORT_BRANCH}+${TIMESTAMP}"
          fi
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          sed -i "s/version = .*/version = \"${VERSION}\"/" pyproject.toml
          echo "Generated version: ${VERSION}"

      - name: Build package
        run: python -m build

      - name: Verify package
        run: twine check dist/*

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: twine upload --repository testpypi dist/*