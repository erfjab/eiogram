name: Publish eiogram

on:
  push:
    branches: [ "master" ]
  release:
    types: [ published ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Auto-versioning
        id: version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION//v/}
          else
            DATE=$(date +'%Y%m%d%H%M')
            VERSION=$(grep -oP 'version = "\K[^"]+' pyproject.toml | head -1)
            VERSION="${VERSION}-dev${DATE}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          sed -i "s/version = .*/version = \"${VERSION}\"/" pyproject.toml

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            twine upload dist/*
          else
            twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
          fi
